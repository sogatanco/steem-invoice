{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","close","setState","link","onSubmit","state","user","amount","kind","memo","this","Container","Row","className","Col","lg","value","Button","variant","type","onClick","Form","Group","Label","Control","placeholder","defaultValue","onChange","e","target","InputGroup","id","Prepend","as","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Navbar","bg","Brand","href","document","getElementById"],"mappings":"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","file":"static/js/main.e9a8a81f.chunk.js","sourcesContent":["import React from 'react';\nimport {Container, Form, Button, Row, Col, InputGroup, FormControl} from 'react-bootstrap';\nimport QRCode from \"react-qr-code\";\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state={\n      link:\"\",\n      user:\"\",\n      amount:\"\",\n      kind:\"steem\",\n      memo:\"\"\n    }\n  }\n\n  close=()=>{\n    this.setState({link:''})\n  }\n\n  onSubmit = () =>{\n    // console.log(this.state)\n    this.setState({link:\"https://steemlogin.com/sign/transfer?to=\"+this.state.user+\"&amount=\"+this.state.amount+\"%20\"+this.state.kind+\"&memo=\"+this.state.memo})\n  }\n  render(){\n    if(this.state.link){\n      return(\n        <Container>\n          <Row className=\"justify-content-md-center mt-3\">\n            <Col lg=\"6\" className=\"text-center\">\n              <h3>Your Invoice</h3>\n              <p>Please Send {this.state.amount} {this.state.kind} to @{this.state.user} with memo : <br/> <pre>{this.state.memo}</pre></p>\n              <small>or you can scan here !!!</small><br/>\n              <QRCode value={this.state.link} />\n\n              <br/>\n              <br/>\n\n              <Button variant=\"primary\" type=\"button\" onClick={this.close}>Close</Button>\n              \n            </Col>\n          </Row>\n        </Container>\n        \n      )\n    }else{\n      return (\n        <Container >\n            <Form>\n            <Row className=\"justify-content-md-center mt-3\">\n              <Col lg=\"6\">\n              <Form.Group >\n                <Form.Label>Steemit Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Your Account\" defaultValue={this.state.user} onChange={e => this.setState({ user:e.target.value })}/>\n              </Form.Group>\n              </Col>\n            </Row>\n    \n            <Row className=\"justify-content-md-center mt-3\">\n              <Col lg=\"6\">\n              <Form.Group>\n                <Form.Label>Amount</Form.Label>\n    \n                <InputGroup className=\"mb-2\">\n                <Form.Control id=\"inlineFormInputGroup\" placeholder=\"Amount\"  defaultValue={this.state.amount} onChange={e => this.setState({ amount:e.target.value })}/>\n                  <InputGroup.Prepend>\n                    <Form.Control as=\"select\" defaultValue={this.state.kind} onChange={e => this.setState({ kind:e.target.value })}>\n                      <option key=\"steem\" value=\"steem\">STEEM</option>\n                      <option key=\"sbd\" value=\"sbd\">SBD</option>\n                    </Form.Control>\n                  </InputGroup.Prepend>\n                 \n                </InputGroup>\n    \n              </Form.Group>\n              </Col>\n            </Row>\n    \n            <Row className=\"justify-content-md-center mt-3\">\n              <Col lg=\"6\">\n              <Form.Group >\n                <Form.Label>Memo</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Transfer Memo\" defaultValue={this.state.memo} onChange={e => this.setState({ memo:e.target.value })}/>\n              </Form.Group>\n              </Col>\n            </Row>\n    \n            <Row className=\"justify-content-md-center mt-3\">\n              <Col lg=\"6\">\n                <Button variant=\"primary\" type=\"button\" onClick={this.onSubmit}>\n                  Generate\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n    \n         \n    \n        </Container>\n        )\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar, Container} from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"#home\">\n            Steem Invoice\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}